var axios = require('axios');

api_key = "677367S3p85g07_9)5n173598d65Y0E5"
secret_key = "5e95lE368&2U2n651a6I77c+9K1e3227"
api_session = "1366834"

var data = JSON.stringify({
    // "interval": "day",
    // "from_date": "2022-05-02T07:00:00.000Z",
    // "to_date": "2022-05-03T07:00:00.000Z",
    // "stock_code": "ITC",
    // "exchange_code": "NSE",
    // "product_type": "Cash",
    // "expiry_date": "",
    // "right": "",
    // "strike_price": "0"

    "exchange_code":"NSE",
    "stock_code":"YESBAN",
    "product_type":"options",
    "expiry_date":"26-June-2022",
    "strike_price":"650",
    "right":"Put"
    // "get_exchange_quotes":"True",
    // "get_market_depth":"False"
});

var config = {
    method: 'get',
    url: 'https://api.icicidirect.com/breezeapi/api/v1/historicalcharts',
    headers: {
        'Content-Type': 'application/json',
        'X-Checksum': 'token ',
        'X-Timestamp': '',
        'X-AppKey': '677367S3p85g07_9)5n173598d65Y0E5',
        'X-SessionToken': '1366834'
    },
    data: data
};

axios(config)
    .then(function (response) {
        console.log(JSON.stringify(response.data));
    })
    .catch(function (error) {
        console.log(error);
    });



























    import React, { useState } from "react";
import Chart from "react-apexcharts";


class SampleLine extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      stockChartXValues: [],
      stockChartYValues: []
    }
  }

  componentDidMount() {
    this.fetchStock();
  }

  fetchStock() {
    const pointerToThis = this;
    console.log(pointerToThis);
    const API_KEY = 'PNEESJ5LC8UIHRQZ';
    let StockSymbol = 'FB';
    let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;
    let stockChartXValuesFunction = [];
    let stockChartYValuesFunction = [];

    fetch(API_Call)
      .then(
        function(response) {
          return response.json();
        }
      )
      .then(
        function(data) {
          console.log(data);

          for (var key in data['Time Series (Daily)']) {
            stockChartXValuesFunction.push(key);
            stockChartYValuesFunction.push(data['Time Series (Daily)'][key]['1. open']);
          }

          // console.log(stockChartXValuesFunction);
          pointerToThis.setState({
            stockChartXValues: stockChartXValuesFunction,
            stockChartYValues: stockChartYValuesFunction
          });
        }
      )
  }

  render() {
    return (
      <div>
        <h1>Stock Market</h1>
        <Chart
          data={[
            {
              x: this.state.stockChartXValues,
              y: this.state.stockChartYValues,
              type: 'scatter',
              mode: 'lines+markers',
              marker: {color: 'red'},
            }
          ]}
          layout={{width: 720, height: 440, title: 'A Fancy Plot'}}
        />
      </div>
    )
  }
}

export default SampleLine







// index




import React, { useState, useEffect } from "react";
import axios from "axios";
import Chart from "react-apexcharts";

export default function SampleLine() {
  const [activeTab, setactiveTab] = useState("1D");

  const tabData = [{ name: "1D" }, { name: "1M" }, { name: "3M" }, { name: "6M" }, { name: "1Y" }, { name: "5Y" }];

  const series = [
    {
      name: "Desktops",
      data: [10, 41, 35, 51, 49, 62, 69, 91, 148],
    },
  ];
  var options = {
    chart: {
      height: 350,
      type: "line",
      foreColor: "#373d3f",
      toolbar: {
        show: false,
      },
      zoom: {
        enabled: false,
      },
    },

    dataLabels: {
      enabled: false,
    },
    stroke: {
      curve: "straight",
      colors: ["var(--color-success)"],
      //   show: true,
      //   curve: "smooth",
      //   lineCap: "butt",
      //   colors: undefined,
      width: 2,
      //   dashArray: 0,
    },
    // title: {
    //   text: "Product Trends by Month",
    //   align: "left",
    // },
    grid: {
      show: false,
      row: {
        colors: ["#f3f3f3", "transparent"], // takes an array which will be repeated on columns
        opacity: 0,
      },
    },
    xaxis: {
      categories: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep"],
      axisBorder: {
        show: false,
      },
      axisTicks: {
        show: false,
      },
      colors: ["#fff"],
      labels: {
        style: {
          colors: "rgba(255, 255, 255, 0.5)",
        },
      },
    },
    yaxis: {
      labels: {
        style: {
          colors: "rgba(255, 255, 255, 0.5)",
        },
      },
    },
  };




  
  useEffect(()=>{
    axios.get("https://api.coindesk.com/v1/bpi/currentprice.json").then(response=>{
      console.log("response", response)
    }).catch(e=>{
      alert(e);
    })
  },[])
  return (
    <div className="line-chart">
      <div className="header">
        <h2>IDEA</h2>
        <h1>
          <span>$</span>7.80
        </h1>
        <p>+$1.00 (+1.45%)</p>
      </div>
      <Chart className="chart" options={options} type="line" series={series} width="100%" height="100%" />
      <div className="actions">
        {tabData.map((item) => (
          <div
            key={item.name}
            className={`tab ${activeTab === item.name ? "tab-active" : ""}`}
            onClick={() => setactiveTab(item.name)}
          >
            {item.name}
          </div>
        ))}
      </div>
    </div>
  );
}
